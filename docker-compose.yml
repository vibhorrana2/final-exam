version: "3.7"

services:
  reverse-proxy:
    image: nginx:stable-alpine
    volumes:
      - ./config/nginx/:/etc/nginx/conf.d/
    ports:
      - 8081:80
    depends_on:
      - backend
    networks:
      web-services:
        aliases:
          - backend.${BACKEND_DOMAIN:-127-0-0-1.sslip.io}

  db:
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - web-services
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: 'postgres@example.com'
      PGADMIN_DEFAULT_PASSWORD: 'password'
    ports:
      - 8080:80
    depends_on:
      - db
    networks:
      - web-services

  backend:
    build: backend
    restart: always
    environment:
      IS_PROD: "true"
      DB_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - web-services
    ports:
      - 8000:8000

networks:
  web-services:

volumes:
  postgres-data:
